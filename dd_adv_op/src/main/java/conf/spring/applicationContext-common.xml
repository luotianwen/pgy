<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       		http://www.springframework.org/schema/aop
       		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
		    http://www.springframework.org/schema/tx  
    	    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <bean id="dataSource" class="com.kkgame.feeop.base.datasource.DynamicDataSource">  
    	<property name="targetDataSources">  
    	<map key-type="java.lang.String">  
    		<!-- key的值必须要和静态键值对照类中的值相同 -->  
        	<entry value-ref="dataSource_kkpay_data" key="kkpay_data"></entry>  
        	<entry value-ref="dataSource_kkpay_ddl" key="kkpay_ddl"></entry>  
    	</map>  
    	</property>  
	</bean>   	
  	<bean id = "sqlMapClient" class = "org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	    <property name = "configLocation">
	    	<value>classpath:ibatis-config.xml</value>
	    </property>
	    <property name = "dataSource">
	      	<ref local = "dataSource"/>
	    </property>
  	</bean>
    <bean id = "placeholderConfig" class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name = "location">
    		<value>classpath:/dbpool.properties</value>
    	</property>
  	</bean>
  	 <bean id="dataSource_kkpay_data" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
     <property name="url" value="${data.url}" />
     <property name="username" value="${data.username}"/>
     <property name="password" value="${data.password}" />
     <property name="maxActive"><value>20</value></property>
     <property name="initialSize"><value>1</value></property>
     <property name="maxWait"><value>60000</value></property>
     <property name="minIdle"><value>1</value></property>
     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
     <property name="validationQuery"><value>SELECT 1</value></property>
     <property name="testWhileIdle"><value>true</value></property>
     <property name="testOnBorrow"><value>false</value></property>
     <property name="testOnReturn"><value>false</value></property>
     <property name="poolPreparedStatements"><value>true</value></property>
     <property name="maxOpenPreparedStatements"><value>20</value></property>
 </bean>
	<!-- <bean id = "dataSource_kkpay_data" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method="close" lazy-init="true">
	    <property name = "driverClass" value = "${driverClassName}"/>
	    <property name = "jdbcUrl" value = "${data.url}"/>
	    <property name = "user" value = "${data.username}"/>
	    <property name = "password" value = "${data.password}"/>
    	<property name = "autoCommitOnClose" value="false"></property>
	    <property name = "maxPoolSize" value = "${data.maxPoolSize}"/>
	    <property name = "minPoolSize" value = "${data.minPoolSize}"/>
	    <property name = "maxIdleTime" value = "180"/>
	    <property name = "acquireIncrement" value = "2"/>
	    <property name = "idleConnectionTestPeriod" value = "600"/>
  	</bean> -->
  	<bean id = "sqlMapClient_kkpay_data" class = "org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	    <property name = "configLocation">
	    	<value>classpath:ibatis-config.xml</value>
	    </property>
	    <property name = "dataSource">
	      	<ref local = "dataSource_kkpay_data"/>
	    </property>
  	</bean>
  	 
	<bean id="transactionManager_kkpay_data" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_kkpay_data" />
	</bean>
 	<tx:advice id="txAdvice_kkpay_data" transaction-manager="transactionManager_kkpay_data" >
		 <tx:attributes> 
			<tx:method name="get*" read-only="true" />
			<tx:method name="getReceiveTaskDetailInfo" rollback-for="org.springframework.dao.DataAccessException" />
			<tx:method name="*" rollback-for="org.springframework.dao.DataAccessException" />
		</tx:attributes>
	</tx:advice>	
	<aop:config>
		<aop:pointcut id="allManagerMethod_kkpay_data" expression="execution(* com.kkgame.feeop..service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice_kkpay_data" pointcut-ref="allManagerMethod_kkpay_data" />
	</aop:config>  
 <bean id="dataSource_kkpay_ddl" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
     <property name="url" value="${ddl.url}" />
     <property name="username" value="${ddl.username}"/>
     <property name="password" value="${ddl.password}" />
     <property name="maxActive"><value>20</value></property>
     <property name="initialSize"><value>1</value></property>
     <property name="maxWait"><value>60000</value></property>
     <property name="minIdle"><value>1</value></property>
     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
     <property name="validationQuery"><value>SELECT 1</value></property>
     <property name="testWhileIdle"><value>true</value></property>
     <property name="testOnBorrow"><value>false</value></property>
     <property name="testOnReturn"><value>false</value></property>
     <property name="poolPreparedStatements"><value>true</value></property>
     <property name="maxOpenPreparedStatements"><value>20</value></property>
 </bean>
	<!-- <bean id = "dataSource_kkpay_ddl" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method="close" lazy-init="true">
	    <property name = "driverClass" value = "${driverClassName}"/>
	    <property name = "jdbcUrl" value = "${ddl.url}"/>
	    <property name = "user" value = "${ddl.username}"/>
	    <property name = "password" value = "${ddl.password}"/>
	    <property name = "autoCommitOnClose" value="false"></property>
	    <property name = "maxPoolSize" value = "${ddl.maxPoolSize}"/>
	    <property name = "minPoolSize" value = "${ddl.minPoolSize}"/>
	    <property name = "maxIdleTime" value = "180"/>
	    <property name = "acquireIncrement" value = "2"/>
	    <property name = "idleConnectionTestPeriod" value = "600"/>
  	</bean> -->
  	<bean id = "sqlMapClient_kkpay_ddl" class = "org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	    <property name = "configLocation">
	    	<value>classpath:ibatis-config.xml</value>
	    </property>
	    <property name = "dataSource">
	      	<ref local = "dataSource_kkpay_ddl"/>
	    </property>
  	</bean>
  	<!-- 
	<bean id="transactionManager_kkpay_ddl" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_kkpay_ddl" />
	</bean>
 	<tx:advice id="txAdvice_kkpay_ddl" transaction-manager="transactionManager_kkpay_ddl" >
		 <tx:attributes> 
			<tx:method name="get*" read-only="true" />
			<tx:method name="getReceiveTaskDetailInfo" rollback-for="org.springframework.dao.DataAccessException" />
			<tx:method name="*" rollback-for="org.springframework.dao.DataAccessException" />
		</tx:attributes>
	</tx:advice>	
	<aop:config>
		<aop:pointcut id="allManagerMethod_kkpay_ddl" expression="execution(* com.kkgame.feeop.data.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice_kkpay_ddl" pointcut-ref="allManagerMethod_kkpay_ddl" />
	</aop:config> 
	 -->
	 <bean id="dataSource_kkpay_ddlslave" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
     <property name="url" value="${ddl.slave.url}" />
     <property name="username" value="${ddl.slave.username}"/>
     <property name="password" value="${ddl.slave.password}" />
     <property name="maxActive"><value>20</value></property>
     <property name="initialSize"><value>1</value></property>
     <property name="maxWait"><value>60000</value></property>
     <property name="minIdle"><value>1</value></property>
     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
     <property name="validationQuery"><value>SELECT 1</value></property>
     <property name="testWhileIdle"><value>true</value></property>
     <property name="testOnBorrow"><value>false</value></property>
     <property name="testOnReturn"><value>false</value></property>
     <property name="poolPreparedStatements"><value>true</value></property>
     <property name="maxOpenPreparedStatements"><value>20</value></property>
 </bean>
	<!-- <bean id = "dataSource_kkpay_ddlslave" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method="close" lazy-init="true">
	    <property name = "driverClass" value = "${driverClassName}"/>
	    <property name = "jdbcUrl" value = "${ddl.slave.url}"/>
	    <property name = "user" value = "${ddl.slave.username}"/>
	    <property name = "password" value = "${ddl.slave.password}"/>
	    <property name = "autoCommitOnClose" value="false"></property>
	    <property name = "maxPoolSize" value = "${ddl.slave.maxPoolSize}"/>
	    <property name = "minPoolSize" value = "${ddl.slave.minPoolSize}"/>
	    <property name = "maxIdleTime" value = "180"/>
	    <property name = "acquireIncrement" value = "2"/>
	    <property name = "idleConnectionTestPeriod" value = "600"/>
  	</bean> -->
  	<bean id = "sqlMapClient_kkpay_ddlslave" class = "org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	    <property name = "configLocation">
	    	<value>classpath:ibatis-config.xml</value>
	    </property>
	    <property name = "dataSource">
	      	<ref local = "dataSource_kkpay_ddlslave"/>
	    </property>
  	</bean>
  	<!-- 
	<bean id="transactionManager_kkpay_ddlslave" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_kkpay_ddlslave" />
	</bean>
 	<tx:advice id="txAdvice_kkpay_ddlslave" transaction-manager="transactionManager_kkpay_ddlslave" >
		 <tx:attributes> 
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" rollback-for="org.springframework.dao.DataAccessException" />
		</tx:attributes>
	</tx:advice>	
	<aop:config>
		<aop:pointcut id="allManagerMethod_kkpay_ddlslave" expression="execution(* com.kkgame.feeop.detail.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice_kkpay_ddlslave" pointcut-ref="allManagerMethod_kkpay_ddl" />
	</aop:config> 
	
	 -->
	 
	  <bean id="dataSource_kkpay_sdkmaster" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
     <property name="url" value="${sdk.master.url}" />
     <property name="username" value="${sdk.master.username}"/>
     <property name="password" value="${sdk.master.password}" />
     <property name="maxActive"><value>20</value></property>
     <property name="initialSize"><value>1</value></property>
     <property name="maxWait"><value>60000</value></property>
     <property name="minIdle"><value>1</value></property>
     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
     <property name="validationQuery"><value>SELECT 1</value></property>
     <property name="testWhileIdle"><value>true</value></property>
     <property name="testOnBorrow"><value>false</value></property>
     <property name="testOnReturn"><value>false</value></property>
     <property name="poolPreparedStatements"><value>true</value></property>
     <property name="maxOpenPreparedStatements"><value>20</value></property>
 </bean>
	<!-- <bean id = "dataSource_kkpay_sdkmaster" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method="close" lazy-init="true">
	    <property name = "driverClass" value = "${driverClassName}"/>
	    <property name = "jdbcUrl" value = "${sdk.master.url}"/>
	    <property name = "user" value = "${sdk.master.username}"/>
	    <property name = "password" value = "${sdk.master.password}"/>
	   	<property name = "autoCommitOnClose" value="false"></property>
	    <property name = "maxPoolSize" value = "${sdk.master.maxPoolSize}"/>
	    <property name = "minPoolSize" value = "${sdk.master.minPoolSize}"/>
	    <property name = "maxIdleTime" value = "180"/>
	    <property name = "acquireIncrement" value = "2"/>
	    <property name = "idleConnectionTestPeriod" value = "600"/>
  	</bean> -->
  	<bean id = "sqlMapClient_kkpay_sdkmaster" class = "org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	    <property name = "configLocation">
	    	<value>classpath:ibatis-config.xml</value>
	    </property>
	    <property name = "dataSource">
	      	<ref local = "dataSource_kkpay_sdkmaster"/>
	    </property>
  	</bean>
  	<!-- 
	<bean id="transactionManager_kkpay_sdkmaster" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_kkpay_sdkmaster" />
	</bean>
 	<tx:advice id="txAdvice_kkpay_sdkmaster" transaction-manager="transactionManager_kkpay_sdkmaster" >
		 <tx:attributes> 
			<tx:method name="get*" read-only="true" />
			<tx:method name="getReceiveTaskDetailInfo" rollback-for="org.springframework.dao.DataAccessException" />
			<tx:method name="*" rollback-for="org.springframework.dao.DataAccessException" />
		</tx:attributes>
	</tx:advice>	
	<aop:config>
		<aop:pointcut id="allManagerMethod_kkpay_sdkmaster" expression="execution(* com.kkgame.feeop.sdkinfo.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice_kkpay_sdkmaster" pointcut-ref="allManagerMethod_kkpay_ddl" />
	</aop:config>  -->
</beans>