<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="projectDataSqlMap">

    <select id="getAffairProjectDataVOList" parameterClass="searchVO" resultClass="projectDataVO">
        SELECT
        SUM(D.UserCount) userCount,
        SUM(D.ProjectUserCount) projectUserCount

        <isEqual property="rowFieldVO.isShowDate" compareValue="1">
            ,DATE_FORMAT(D.StatDate,'%Y-%m-%d') statDate
        </isEqual>
        <isEqual property="rowFieldVO.isShowDate" compareValue="0">
            ,null statDate
        </isEqual>
        <isEqual property="rowFieldVO.isShowAgent" compareValue="1">
            ,IFNULL(A.ID,0) agentId
            ,A.Name agentName
        </isEqual>
        <isEqual property="rowFieldVO.isShowAgent" compareValue="0">
            ,null agentName
            ,0 agentId
        </isEqual>
        <isEqual property="rowFieldVO.isShowBd" compareValue="1">
            ,IFNULL(B.ID,0) bdId
            ,B.Name bdName
        </isEqual>
        <isEqual property="rowFieldVO.isShowBd" compareValue="0">
            ,null bdName
            ,0 bdId
        </isEqual>
        <isEqual property="rowFieldVO.isShowCustomer" compareValue="1">
            ,IFNULL(C.ID,0) customerId
            ,IFNULL(C.Name,'未知客户') customerName
        </isEqual>
        <isEqual property="rowFieldVO.isShowCustomer" compareValue="0">
            ,null customerName
            ,0 customerId
        </isEqual>
        <isEqual property="rowFieldVO.isShowProject" compareValue="1">
            ,IFNULL(D.ProjectId,0) projectId
            ,IFNULL(PR.Name,'未知项目') projectName
        </isEqual>
        <isEqual property="rowFieldVO.isShowProject" compareValue="0">
            ,0 projectId
            ,null projectName
        </isEqual>
        <isEqual property="rowFieldVO.isShowProduct" compareValue="1">
            ,IFNULL(PT.ID,0) productId
            ,IFNULL(PT.Name,'未知项目') productName
        </isEqual>
        <isEqual property="rowFieldVO.isShowProduct" compareValue="0">
            ,0 productId
            ,null productName
        </isEqual>
        , D.country , D.countryName
        <isEqual property="rowFieldVO.isShowType" compareValue="1">
            ,IFNULL(D.Type,0) type
        </isEqual>
        <isEqual property="rowFieldVO.isShowType" compareValue="0">
            , 0 type
        </isEqual>
        FROM (
        SELECT IFNULL(SUM(D.UserCount),0) userCount,
        IFNULL(SUM(D.ProjectUserCount),0) projectUserCount,

        StatDate, ProjectId, Type
        <isEqual property="rowFieldVO.isShowCountry" compareValue="1">
            ,IFNULL(D.Country,0) country
            ,IFNULL(E.description,'未知国家') countryName
        </isEqual>
        <isEqual property="rowFieldVO.isShowCountry" compareValue="0">
            ,0 country
            ,null countryName
        </isEqual>
        FROM
        register_data_$table$ D
        LEFT JOIN kok_sdk.EnumerationValue E on E.id=D.Country
        WHERE 1=1
        <isGreaterThan property="country" compareValue="0">
            AND D.country = #country#
        </isGreaterThan>
        GROUP BY 1=1
        <isEqual prepend=" , " property="rowFieldVO.isShowCountry" compareValue="1">
            D.Country
        </isEqual>
        ,StatDate, ProjectId, Type
        ) as D
        LEFT JOIN project_hz_total_$table$ H ON H.sdate=D.StatDate AND H.sdkType = D.Type AND H.ProjectId = D.ProjectId

        LEFT JOIN PROJECT PR ON PR.ID=D.ProjectId
        LEFT JOIN PRODUCT PT ON PT.ID = PR.ProductId
        LEFT JOIN CUSTOMER C ON C.ID = PR.CustomerId
        LEFT JOIN BD B ON C.BdId = B.ID
        LEFT JOIN AGENT A ON A.ID=B.AgentId
        WHERE D.StatDate BETWEEN #startDate# AND #endDate#

        and D.ProjectId not in (SELECT projectId FROM project_inside)

        <isGreaterThan property="agentId" compareValue="0">
            AND A.ID = #agentId#
        </isGreaterThan>
        <isGreaterThan property="bdId" compareValue="0">
            AND B.ID = #bdId#
        </isGreaterThan>
        <isGreaterThan property="customerId" compareValue="0">
            AND C.ID = #customerId#
        </isGreaterThan>
        <isGreaterThan property="projectId" compareValue="0">
            AND D.projectId = #projectId#
        </isGreaterThan>
        <isGreaterThan property="productId" compareValue="0">
            AND PT.ID = #productId#
        </isGreaterThan>
        <isGreaterThan property="type" compareValue="0">
            AND D.Type = #type#
        </isGreaterThan>
        <dynamic prepend=" GROUP BY ">
            <isEqual prepend=" , " property="rowFieldVO.isShowDate" compareValue="1">
                DATE_FORMAT(D.StatDate,'%Y-%m-%d')
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowAgent" compareValue="1">
                A.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowBd" compareValue="1">
                B.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowCustomer" compareValue="1">
                C.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowProject" compareValue="1">
                D.ProjectId
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowProduct" compareValue="1">
                PT.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowType" compareValue="1">
                D.Type
            </isEqual>
        </dynamic>
        <dynamic prepend=" ORDER BY ">
            <isEqual prepend=" , " property="rowFieldVO.isShowDate" compareValue="1">
                DATE_FORMAT(D.StatDate,'%Y-%m-%d') ASC, userCount DESC
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowDate" compareValue="0">
                userCount DESC
            </isEqual>
        </dynamic>
    </select>

    <select id="getProjectDataVOList" parameterClass="searchVO" resultClass="projectDataVO">
        SELECT
        SUM(D.UserCount) userCount,
        SUM(D.ProjectUserCount) projectUserCount,
        SUM(D.ActiveCount) activeCount,
        SUM(D.TotalActiveCount) totalActiveCount,
        SUM(D.ProjectActiveCount) projectActiveCount,
        SUM(D.SendCount) sendCount,
        SUM(D.SendTimes) sendTimes,
        SUM(D.ReceiveCount) receiveCount,
        SUM(D.ReceiveTimes) receiveTimes,
        SUM(D.ShowCount) showCount,
        SUM(D.ShowTimes) showTimes,
        SUM(D.ClickCount) clickCount,
        SUM(D.ClickTimes) clickTimes,
        SUM(D.DownloadCount) downloadCount,
        SUM(D.DownloadTimes) downloadTimes,
        SUM(D.InstallCount) installCount,
        SUM(D.InstallTimes) installTimes,
        SUM(D.totalInstallTimes) totalInstallTimes,
        SUM(D.PushSendCount) pushSendCount,
        SUM(D.PushSendTimes) pushSendTimes,
        SUM(D.PushReceiveCount) pushReceiveCount,
        SUM(D.PushReceiveTimes) pushReceiveTimes,
        SUM(D.PushShowCount) pushShowCount,
        SUM(D.PushShowTimes) pushShowTimes,
        SUM(D.PushClickCount) pushClickCount,
        SUM(D.PushClickTimes) pushClickTimes,
        SUM(D.PushDownloadCount) pushDownloadCount,
        SUM(D.PushDownloadTimes) pushDownloadTimes,
        SUM(D.PushInstallCount) pushInstallCount,
        SUM(D.PushInstallTimes) pushInstallTimes,
        SUM(D.LeadSendCount) leadSendCount,
        SUM(D.LeadSendTimes) leadSendTimes,
        SUM(D.LeadReceiveCount) leadReceiveCount,
        SUM(D.LeadReceiveTimes) leadReceiveTimes,
        SUM(D.LeadShowCount) leadShowCount,
        SUM(D.LeadShowTimes) leadShowTimes,
        SUM(D.LeadClickCount) leadClickCount,
        SUM(D.LeadClickTimes) leadClickTimes,
        SUM(D.LeadDownloadCount) leadDownloadCount,
        SUM(D.LeadDownloadTimes) leadDownloadTimes,
        SUM(D.LeadInstallCount) leadInstallCount,
        SUM(D.LeadInstallTimes) leadInstallTimes,
        SUM(D.SinkSendCount) sinkSendCount,
        SUM(D.SinkSendTimes) sinkSendTimes,
        SUM(D.SinkReceiveCount) sinkReceiveCount,
        SUM(D.SinkReceiveTimes) sinkReceiveTimes,
        SUM(D.SinkShowCount) sinkShowCount,
        SUM(D.SinkShowTimes) sinkShowTimes,
        SUM(D.SinkClickCount) sinkClickCount,
        SUM(D.SinkClickTimes) sinkClickTimes,
        SUM(D.SinkDownloadCount) sinkDownloadCount,
        SUM(D.SinkDownloadTimes) sinkDownloadTimes,
        SUM(D.SinkInstallCount) sinkInstallCount,
        SUM(D.SinkInstallTimes) sinkInstallTimes,
        SUM(D.SilenceSendCount) silenceSendCount,
        SUM(D.SilenceSendTimes) silenceSendTimes,
        SUM(D.SilenceReceiveCount) silenceReceiveCount,
        SUM(D.SilenceReceiveTimes) silenceReceiveTimes,
        SUM(D.SilenceShowCount) silenceShowCount,
        SUM(D.SilenceShowTimes) silenceShowTimes,
        SUM(D.SilenceClickCount) silenceClickCount,
        SUM(D.SilenceClickTimes) silenceClickTimes,
        SUM(D.SilenceDownloadCount) silenceDownloadCount,
        SUM(D.SilenceDownloadTimes) silenceDownloadTimes,
        SUM(D.SilenceInstallCount) silenceInstallCount,
        SUM(D.SilenceInstallTimes) silenceInstallTimes,
        SUM(D.ActivateCount) activateCount,
        SUM(D.ActivateTimes) activateTimes,
        IFNULL(ROUND(SUM(D.ReceiveTimes)*100.0/SUM(D.SendTimes),2),0) receivePercent,
        IFNULL(ROUND(SUM(D.ShowTimes)*100.0/SUM(D.ReceiveTimes),2),0) showPercent,
        IFNULL(ROUND(SUM(D.DownloadTimes)*100.0/SUM(D.ClickTimes),2),0) downloadPercent,
        IFNULL(ROUND(SUM(D.ClickTimes)*100.0/SUM(D.ShowTimes),2),0) clickPercent,
        IFNULL(ROUND(SUM(D.InstallTimes)*100.0/SUM(D.DownloadTimes),2),0) installPercent,
        IFNULL(ROUND(SUM(D.PushReceiveTimes)*100.0/SUM(D.PushSendTimes),2),0) receivePushPercent,
        IFNULL(ROUND(SUM(D.PushShowTimes)*100.0/SUM(D.PushReceiveTimes),2),0) showPushPercent,
        IFNULL(ROUND(SUM(D.PushDownloadTimes)*100.0/SUM(D.PushClickTimes),2),0) downloadPushPercent,
        IFNULL(ROUND(SUM(D.PushInstallTimes)*100.0/SUM(D.PushDownloadTimes),2),0) installPushPercent,
        IFNULL(ROUND(SUM(D.PushClickTimes)*100.0/SUM(D.PushShowTimes),2),0) clickPushPercent,
        IFNULL(ROUND(SUM(D.LeadReceiveTimes)*100.0/SUM(D.LeadSendTimes),2),0) receiveLeadPercent,
        IFNULL(ROUND(SUM(D.LeadShowTimes)*100.0/SUM(D.LeadReceiveTimes),2),0) showLeadPercent,
        IFNULL(ROUND(SUM(D.LeadDownloadTimes)*100.0/SUM(D.LeadClickTimes),2),0) downloadLeadPercent,
        IFNULL(ROUND(SUM(D.LeadClickTimes)*100.0/SUM(D.LeadShowTimes),2),0) clickLeadPercent,
        IFNULL(ROUND(SUM(D.LeadInstallTimes)*100.0/SUM(D.LeadDownloadTimes),2),0) installLeadPercent,
        IFNULL(ROUND(SUM(D.SinkReceiveTimes)*100.0/SUM(D.SinkSendTimes),2),0) receiveSinkPercent,
        IFNULL(ROUND(SUM(D.SinkShowTimes)*100.0/SUM(D.SinkReceiveTimes),2),0) showSinkPercent,
        IFNULL(ROUND(SUM(D.SinkDownloadTimes)*100.0/SUM(D.SinkClickTimes),2),0) downloadSinkPercent,
        IFNULL(ROUND(SUM(D.SinkClickTimes)*100.0/SUM(D.SinkShowTimes),2),0) clickSinkPercent,
        IFNULL(ROUND(SUM(D.SinkInstallTimes)*100.0/SUM(D.SinkDownloadTimes),2),0) installSinkPercent,
        IFNULL(ROUND(SUM(D.PushInstallTimes)/SUM(D.UserCount),4),0) pushAipu,
        IFNULL(ROUND(SUM(D.LeadInstallTimes)/SUM(D.UserCount),4),0) leadAipu,
        IFNULL(ROUND(SUM(D.SinkInstallTimes)/SUM(D.UserCount),4),0) sinkAipu,
        IFNULL(ROUND(SUM(D.InstallTimes)/SUM(D.UserCount),2),0) aipu,
        IFNULL(ROUND(SUM(D.InstallTimes+D.PushInstallTimes)/SUM(D.UserCount),2),0) totalAipu,
        IFNULL(ROUND(SUM(D.SilenceReceiveTimes)*100.0/SUM(D.SilenceSendTimes),2),0) receiveSilencePercent,
        IFNULL(ROUND(SUM(D.SilenceInstallTimes)/SUM(D.UserCount),2),0) silencePercent,
        IFNULL(ROUND(SUM(D.SilenceInstallTimes)*100.0/SUM(D.SilenceDownloadTimes),2),0) installSilencePercent,
        IFNULL(ROUND(SUM(D.SilenceShowTimes)*100.0/SUM(D.SilenceReceiveTimes),2),0) showSilencePercent,
        IFNULL(ROUND(SUM(D.SilenceDownloadTimes)*100.0/SUM(D.SilenceClickTimes),2),0) downloadSilencePercent,
        IFNULL(ROUND(SUM(D.SilenceClickTimes)*100.0/SUM(D.SilenceShowTimes),2),0) clickSilencePercent,
        IFNULL(SUM(H.income) ,0) adIncome,
        IFNULL(SUM(H.thirdIncome) ,0) thirdIncome

        <isEqual property="rowFieldVO.isShowDate" compareValue="1">
            ,DATE_FORMAT(D.StatDate,'%Y-%m-%d') statDate
        </isEqual>
        <isEqual property="rowFieldVO.isShowDate" compareValue="0">
            ,null statDate
        </isEqual>
        <isEqual property="rowFieldVO.isShowAgent" compareValue="1">
            ,IFNULL(A.ID,0) agentId
            ,A.Name agentName
        </isEqual>
        <isEqual property="rowFieldVO.isShowAgent" compareValue="0">
            ,null agentName
            ,0 agentId
        </isEqual>
        <isEqual property="rowFieldVO.isShowBd" compareValue="1">
            ,IFNULL(B.ID,0) bdId
            ,B.Name bdName
        </isEqual>
        <isEqual property="rowFieldVO.isShowBd" compareValue="0">
            ,null bdName
            ,0 bdId
        </isEqual>
        <isEqual property="rowFieldVO.isShowCustomer" compareValue="1">
            ,IFNULL(C.ID,0) customerId
            ,IFNULL(C.Name,'未知客户') customerName
        </isEqual>
        <isEqual property="rowFieldVO.isShowCustomer" compareValue="0">
            ,null customerName
            ,0 customerId
        </isEqual>
        <isEqual property="rowFieldVO.isShowProject" compareValue="1">
            ,IFNULL(D.ProjectId,0) projectId
            ,IFNULL(PR.Name,'未知项目') projectName
        </isEqual>
        <isEqual property="rowFieldVO.isShowProject" compareValue="0">
            ,0 projectId
            ,null projectName
        </isEqual>
        <isEqual property="rowFieldVO.isShowProduct" compareValue="1">
            ,IFNULL(PT.ID,0) productId
            ,IFNULL(PT.Name,'未知项目') productName
        </isEqual>
        <isEqual property="rowFieldVO.isShowProduct" compareValue="0">
            ,0 productId
            ,null productName
        </isEqual>
        , D.country , D.countryName
        <isEqual property="rowFieldVO.isShowType" compareValue="1">
            ,IFNULL(D.Type,0) type
        </isEqual>
        <isEqual property="rowFieldVO.isShowType" compareValue="0">
            , 0 type
        </isEqual>
        FROM (
        SELECT IFNULL(SUM(D.UserCount),0) userCount,
        IFNULL(SUM(D.ProjectUserCount),0) projectUserCount,

        IFNULL(SUM(D.ActiveCount),0) activeCount,
        IFNULL(SUM(D.TotalActiveCount),0) totalActiveCount,
        IFNULL(SUM(D.ProjectActiveCount),0) projectActiveCount,
        IFNULL(SUM(D.SendCount),0) sendCount,
        IFNULL(SUM(D.SendTimes),0) sendTimes,
        IFNULL(SUM(D.ReceiveCount),0) receiveCount,
        IFNULL(SUM(D.ReceiveTimes),0) receiveTimes,
        IFNULL(SUM(D.ShowCount),0) showCount,
        IFNULL(SUM(D.ShowTimes),0) showTimes,
        IFNULL(SUM(D.ClickCount),0) clickCount,
        IFNULL(SUM(D.ClickTimes),0) clickTimes,
        IFNULL(SUM(D.DownloadCount),0) downloadCount,
        IFNULL(SUM(D.DownloadTimes),0) downloadTimes,
        IFNULL(SUM(D.InstallCount),0) installCount,
        IFNULL(SUM(D.InstallTimes),0) installTimes,
        IFNULL(SUM(D.InstallTimes+D.PushInstallTimes),0) totalInstallTimes,
        IFNULL(SUM(D.PushSendCount),0) pushSendCount,
        IFNULL(SUM(D.PushSendTimes),0) pushSendTimes,
        IFNULL(SUM(D.PushReceiveCount),0) pushReceiveCount,
        IFNULL(SUM(D.PushReceiveTimes),0) pushReceiveTimes,
        IFNULL(SUM(D.PushShowCount),0) pushShowCount,
        IFNULL(SUM(D.PushShowTimes),0) pushShowTimes,
        IFNULL(SUM(D.PushClickCount),0) pushClickCount,
        IFNULL(SUM(D.PushClickTimes),0) pushClickTimes,
        IFNULL(SUM(D.PushDownloadCount),0) pushDownloadCount,
        IFNULL(SUM(D.PushDownloadTimes),0) pushDownloadTimes,
        IFNULL(SUM(D.PushInstallCount),0) pushInstallCount,
        IFNULL(SUM(D.PushInstallTimes),0) pushInstallTimes,
        IFNULL(SUM(D.LeadSendCount),0) leadSendCount,
        IFNULL(SUM(D.LeadSendTimes),0) leadSendTimes,
        IFNULL(SUM(D.LeadReceiveCount),0) leadReceiveCount,
        IFNULL(SUM(D.LeadReceiveTimes),0) leadReceiveTimes,
        IFNULL(SUM(D.LeadShowCount),0) leadShowCount,
        IFNULL(SUM(D.LeadShowTimes),0) leadShowTimes,
        IFNULL(SUM(D.LeadClickCount),0) leadClickCount,
        IFNULL(SUM(D.LeadClickTimes),0) leadClickTimes,
        IFNULL(SUM(D.LeadDownloadCount),0) leadDownloadCount,
        IFNULL(SUM(D.LeadDownloadTimes),0) leadDownloadTimes,
        IFNULL(SUM(D.LeadInstallCount),0) leadInstallCount,
        IFNULL(SUM(D.LeadInstallTimes),0) leadInstallTimes,
        IFNULL(SUM(D.SinkSendCount),0) sinkSendCount,
        IFNULL(SUM(D.SinkSendTimes),0) sinkSendTimes,
        IFNULL(SUM(D.SinkReceiveCount),0) sinkReceiveCount,
        IFNULL(SUM(D.SinkReceiveTimes),0) sinkReceiveTimes,
        IFNULL(SUM(D.SinkShowCount),0) sinkShowCount,
        IFNULL(SUM(D.SinkShowTimes),0) sinkShowTimes,
        IFNULL(SUM(D.SinkClickCount),0) sinkClickCount,
        IFNULL(SUM(D.SinkClickTimes),0) sinkClickTimes,
        IFNULL(SUM(D.SinkDownloadCount),0) sinkDownloadCount,
        IFNULL(SUM(D.SinkDownloadTimes),0) sinkDownloadTimes,
        IFNULL(SUM(D.SinkInstallCount),0) sinkInstallCount,
        IFNULL(SUM(D.SinkInstallTimes),0) sinkInstallTimes,
        IFNULL(SUM(D.SilenceSendCount),0) silenceSendCount,
        IFNULL(SUM(D.SilenceSendTimes),0) silenceSendTimes,
        IFNULL(SUM(D.SilenceReceiveCount),0) silenceReceiveCount,
        IFNULL(SUM(D.SilenceReceiveTimes),0) silenceReceiveTimes,
        IFNULL(SUM(D.SilenceShowCount),0) silenceShowCount,
        IFNULL(SUM(D.SilenceShowTimes),0) silenceShowTimes,
        IFNULL(SUM(D.SilenceClickCount),0) silenceClickCount,
        IFNULL(SUM(D.SilenceClickTimes),0) silenceClickTimes,
        IFNULL(SUM(D.SilenceDownloadCount),0) silenceDownloadCount,
        IFNULL(SUM(D.SilenceDownloadTimes),0) silenceDownloadTimes,
        IFNULL(SUM(D.SilenceInstallCount),0) silenceInstallCount,
        IFNULL(SUM(D.SilenceInstallTimes),0) silenceInstallTimes,
        IFNULL(SUM(D.ActivateCount),0) activateCount,
        IFNULL(SUM(D.ActivateTimes),0) activateTimes,
        IFNULL(ROUND(IFNULL(SUM(D.ReceiveTimes),0)*100.0/IFNULL(SUM(D.SendTimes),0),2),0) receivePercent,
        IFNULL(ROUND(IFNULL(SUM(D.ShowTimes),0)*100.0/IFNULL(SUM(D.ReceiveTimes),0),2),0) showPercent,
        IFNULL(ROUND(IFNULL(SUM(D.DownloadTimes),0)*100.0/IFNULL(SUM(D.ClickTimes),0),2),0) downloadPercent,
        IFNULL(ROUND(IFNULL(SUM(D.ClickTimes),0)*100.0/IFNULL(SUM(D.ShowTimes),0),2),0) clickPercent,
        IFNULL(ROUND(IFNULL(SUM(D.InstallTimes),0)*100.0/IFNULL(SUM(D.DownloadTimes),0),2),0) installPercent,
        IFNULL(ROUND(IFNULL(SUM(D.PushReceiveTimes),0)*100.0/IFNULL(SUM(D.PushSendTimes),0),2),0) receivePushPercent,
        IFNULL(ROUND(IFNULL(SUM(D.PushShowTimes),0)*100.0/IFNULL(SUM(D.PushReceiveTimes),0),2),0) showPushPercent,
        IFNULL(ROUND(IFNULL(SUM(D.PushDownloadTimes),0)*100.0/IFNULL(SUM(D.PushClickTimes),0),2),0) downloadPushPercent,
        IFNULL(ROUND(IFNULL(SUM(D.PushInstallTimes),0)*100.0/IFNULL(SUM(D.PushDownloadTimes),0),2),0)
        installPushPercent,
        IFNULL(ROUND(IFNULL(SUM(D.PushClickTimes),0)*100.0/IFNULL(SUM(D.PushShowTimes),0),2),0) clickPushPercent,
        IFNULL(ROUND(IFNULL(SUM(D.LeadReceiveTimes),0)*100.0/IFNULL(SUM(D.LeadSendTimes),0),2),0) receiveLeadPercent,
        IFNULL(ROUND(IFNULL(SUM(D.LeadShowTimes),0)*100.0/IFNULL(SUM(D.LeadReceiveTimes),0),2),0) showLeadPercent,
        IFNULL(ROUND(IFNULL(SUM(D.LeadDownloadTimes),0)*100.0/IFNULL(SUM(D.LeadClickTimes),0),2),0) downloadLeadPercent,
        IFNULL(ROUND(IFNULL(SUM(D.LeadClickTimes),0)*100.0/IFNULL(SUM(D.LeadShowTimes),0),2),0) clickLeadPercent,
        IFNULL(ROUND(IFNULL(SUM(D.LeadInstallTimes),0)*100.0/IFNULL(SUM(D.LeadDownloadTimes),0),2),0)
        installLeadPercent,
        IFNULL(ROUND(IFNULL(SUM(D.SinkReceiveTimes),0)*100.0/IFNULL(SUM(D.SinkSendTimes),0),2),0) receiveSinkPercent,
        IFNULL(ROUND(IFNULL(SUM(D.SinkShowTimes),0)*100.0/IFNULL(SUM(D.SinkReceiveTimes),0),2),0) showSinkPercent,
        IFNULL(ROUND(IFNULL(SUM(D.SinkDownloadTimes),0)*100.0/IFNULL(SUM(D.SinkClickTimes),0),2),0) downloadSinkPercent,
        IFNULL(ROUND(IFNULL(SUM(D.SinkClickTimes),0)*100.0/IFNULL(SUM(D.SinkShowTimes),0),2),0) clickSinkPercent,
        IFNULL(ROUND(IFNULL(SUM(D.SinkInstallTimes),0)*100.0/IFNULL(SUM(D.SinkDownloadTimes),0),2),0)
        installSinkPercent,
        IFNULL(ROUND(IFNULL(SUM(D.PushInstallTimes),0)/IFNULL(SUM(D.UserCount),0),4),0) pushAipu,
        IFNULL(ROUND(IFNULL(SUM(D.LeadInstallTimes),0)/IFNULL(SUM(D.UserCount),0),4),0) leadAipu,
        IFNULL(ROUND(IFNULL(SUM(D.SinkInstallTimes),0)/IFNULL(SUM(D.UserCount),0),4),0) sinkAipu,
        IFNULL(ROUND(IFNULL(SUM(D.InstallTimes),0)/IFNULL(SUM(D.UserCount),0),2),0) aipu,
        IFNULL(ROUND(IFNULL(SUM(D.InstallTimes+D.PushInstallTimes),0)/IFNULL(SUM(D.UserCount),0),2),0) totalAipu,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceReceiveTimes),0)*100.0/IFNULL(SUM(D.SilenceSendTimes),0),2),0)
        receiveSilencePercent,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceInstallTimes),0)/IFNULL(SUM(D.UserCount),0),2),0) silencePercent,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceInstallTimes),0)*100.0/IFNULL(SUM(D.SilenceDownloadTimes),0),2),0)
        installSilencePercent,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceShowTimes),0)*100.0/IFNULL(SUM(D.SilenceReceiveTimes),0),2),0)
        showSilencePercent,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceDownloadTimes),0)*100.0/IFNULL(SUM(D.SilenceClickTimes),0),2),0)
        downloadSilencePercent,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceClickTimes),0)*100.0/IFNULL(SUM(D.SilenceShowTimes),0),2),0)
        clickSilencePercent,

        StatDate, ProjectId, Type
        <isEqual property="rowFieldVO.isShowCountry" compareValue="1">
            ,IFNULL(D.Country,0) country
            ,IFNULL(E.description,'未知国家') countryName
        </isEqual>
        <isEqual property="rowFieldVO.isShowCountry" compareValue="0">
            ,0 country
            ,null countryName
        </isEqual>
        FROM
        register_data_$table$ D
        LEFT JOIN kok_sdk.EnumerationValue E on E.id=D.Country
        WHERE 1=1
        <isGreaterThan property="country" compareValue="0">
            AND D.country = #country#
        </isGreaterThan>
        GROUP BY 1=1
        <isEqual prepend=" , " property="rowFieldVO.isShowCountry" compareValue="1">
            D.Country
        </isEqual>
        ,StatDate, ProjectId, Type
        ) as D
        LEFT JOIN project_hz_total_$table$ H ON H.sdate=D.StatDate AND H.sdkType = D.Type AND H.ProjectId = D.ProjectId

        LEFT JOIN PROJECT PR ON PR.ID=D.ProjectId
        LEFT JOIN PRODUCT PT ON PT.ID = PR.ProductId
        LEFT JOIN CUSTOMER C ON C.ID = PR.CustomerId
        LEFT JOIN BD B ON C.BdId = B.ID
        LEFT JOIN AGENT A ON A.ID=B.AgentId
        WHERE D.StatDate BETWEEN #startDate# AND #endDate#

        <isGreaterThan property="agentId" compareValue="0">
            AND A.ID = #agentId#
        </isGreaterThan>
        <isGreaterThan property="bdId" compareValue="0">
            AND B.ID = #bdId#
        </isGreaterThan>
        <isGreaterThan property="customerId" compareValue="0">
            AND C.ID = #customerId#
        </isGreaterThan>
        <isGreaterThan property="projectId" compareValue="0">
            AND D.projectId = #projectId#
        </isGreaterThan>
        <isGreaterThan property="productId" compareValue="0">
            AND PT.ID = #productId#
        </isGreaterThan>
        <isGreaterThan property="type" compareValue="0">
            AND D.Type = #type#
        </isGreaterThan>
        <dynamic prepend=" GROUP BY ">
            <isEqual prepend=" , " property="rowFieldVO.isShowDate" compareValue="1">
                DATE_FORMAT(D.StatDate,'%Y-%m-%d')
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowAgent" compareValue="1">
                A.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowBd" compareValue="1">
                B.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowCustomer" compareValue="1">
                C.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowProject" compareValue="1">
                D.ProjectId
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowProduct" compareValue="1">
                PT.ID
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowType" compareValue="1">
                D.Type
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowCountry" compareValue="1">
                D.Country
            </isEqual>

        </dynamic>
        <dynamic prepend=" ORDER BY ">
            <isEqual prepend=" , " property="rowFieldVO.isShowDate" compareValue="1">
                DATE_FORMAT(D.StatDate,'%Y-%m-%d') ASC, userCount DESC
            </isEqual>
            <isEqual prepend=" , " property="rowFieldVO.isShowDate" compareValue="0">
                userCount DESC
            </isEqual>
        </dynamic>
    </select>
    <select id="getTotalProjectDataVOList" parameterClass="searchVO" resultClass="projectDataVO">
        SELECT IFNULL(SUM(D.UserCount),0) userCount,
        IFNULL(SUM(D.ActiveCount),0) activeCount,
        IFNULL(SUM(D.ProjectActiveCount),0) projectActiveCount,
        IFNULL(SUM(D.InstallTimes),0) installTimes,
        IFNULL(SUM(D.PushInstallTimes),0) pushInstallTimes,
        IFNULL(SUM(D.LeadInstallTimes),0) leadInstallTimes,
        IFNULL(SUM(D.SinkInstallTimes),0) sinkInstallTimes,
        IFNULL(SUM(D.SilenceInstallTimes),0) silenceInstallTimes,
        IFNULL(SUM(D.InstallTimes+D.PushInstallTimes+D.SilenceInstallTimes+D.PushSilenceInstallTimes),0)
        totalInstallTimes,
        IFNULL(SUM(D.ApkInstallTimes+D.ApkPushInstallTimes+D.ApkSilenceInstallTimes+D.ApkPushSilenceInstallTimes),0)
        apkTotalInstallTimes,
        IFNULL(SUM(D.HighUsers+D.LowUsers+D.MidUsers),0) totalUsers,
        ROUND(IFNULL(SUM(D.HighUsers+D.LowUsers+D.MidUsers)/SUM(D.UserCount),0),2) conversionPercent,
        ROUND(IFNULL(SUM(D.Income),0),2) income,
        ROUND(IFNULL(SUM(D.LinkIncome),0),2) linkIncome,
        ROUND(IFNULL(SUM(D.ThirdIncome),0),2) thirdIncome,
        ROUND(IFNULL(SUM(D.Outcome),0),2) outcome,
        ROUND(IFNULL(SUM(D.Income+D.ThirdIncome+D.LinkIncome-D.Outcome),0),2) profit,
        ROUND(IFNULL(SUM(D.Income+D.ThirdIncome+D.LinkIncome-D.Outcome)*100/SUM(D.UserCount),0),2) profitRegister,
        IFNULL(SUM(D.ApkUserCount),0) apkUserCount,
        IFNULL(SUM(D.ApkActiveCount),0) apkActiveCount,
        IFNULL(SUM(D.ApkInstallTimes),0) apkInstallTimes,
        IFNULL(SUM(D.ApkPushInstallTimes),0) apkPushInstallTimes,
        IFNULL(SUM(D.ApkLeadInstallTimes),0) apkLeadInstallTimes,
        IFNULL(SUM(D.ApkSinkInstallTimes),0) apkSinkInstallTimes,
        IFNULL(SUM(D.ApkSilenceInstallTimes),0) apkSilenceInstallTimes,

        IFNULL(SUM(D.LeadUserCount),0) leadUserCount,
        IFNULL(SUM(D.LeadActiveCount),0) leadActiveCount,
        IFNULL(SUM(D.LeadProjectActiveCount),0) leadProjectActiveCount,
        IFNULL(SUM(D.LeadTypeInstallTimes),0) leadTypeInstallTimes,
        IFNULL(SUM(D.LeadPushInstallTimes),0) leadPushInstallTimes,
        IFNULL(SUM(D.LeadLeadInstallTimes),0) leadLeadInstallTimes,
        IFNULL(SUM(D.LeadSinkInstallTimes),0) leadSinkInstallTimes,
        IFNULL(SUM(D.LeadSilenceInstallTimes),0) leadSilenceInstallTimes,

        IFNULL(SUM(D.SilenceUserCount),0) silenceUserCount,
        IFNULL(SUM(D.SilenceActiveCount),0) silenceActiveCount,
        IFNULL(SUM(D.SilenceProjectActiveCount),0) silenceProjectActiveCount,
        IFNULL(SUM(D.SilenceTypeInstallTimes),0) silenceTypeInstallTimes,
        IFNULL(SUM(D.SilencePushInstallTimes),0) silencePushInstallTimes,
        IFNULL(SUM(D.SilenceLeadInstallTimes),0) silenceLeadInstallTimes,
        IFNULL(SUM(D.SilenceSinkInstallTimes),0) silenceSinkInstallTimes,
        IFNULL(SUM(D.SilenceSilenceInstallTimes),0) silenceSilenceInstallTimes,

        IFNULL(ROUND(IFNULL(SUM(D.InstallTimes+D.PushInstallTimes+D.SilenceInstallTimes+D.PushSilenceInstallTimes),0)/IFNULL(SUM(D.UserCount),0),2),0)
        totalAipu,
        IFNULL(ROUND(IFNULL(SUM(D.ApkInstallTimes+D.ApkPushInstallTimes+D.ApkSilenceInstallTimes+D.ApkPushSilenceInstallTimes),0)/IFNULL(SUM(D.ApkUserCount),0),2),0)
        apkTotalAipu,
        IFNULL(ROUND(IFNULL(SUM(D.LeadInstallTimes+D.LeadPushInstallTimes+D.LeadSilenceInstallTimes+D.LeadPushSilenceInstallTimes),0)/IFNULL(SUM(D.LeadUserCount),0),2),0)
        leadTotalAipu,
        IFNULL(ROUND(IFNULL(SUM(D.SilenceInstallTimes+D.SilencePushInstallTimes+D.SilenceSilenceInstallTimes+D.SilencePushSilenceInstallTimes),0)/IFNULL(SUM(D.SilenceUserCount),0),2),0)
        silenceTotalAipu,
        IFNULL(ROUND(IFNULL(SUM(D.HighUsers+D.LowUsers+D.MidUsers),0)*100.0/IFNULL(SUM(D.UserCount),0),2),0)
        changePercent,
        IFNULL(ROUND(IFNULL(SUM(D.LeadInstallTimes),0)*100/IFNULL(SUM(D.UserCount),0),2),0) leadAipu,
        IFNULL(ROUND(IFNULL(SUM(D.SinkInstallTimes),0)*100/IFNULL(SUM(D.UserCount),0),2),0) sinkAipu,
        IFNULL(D.ProjectId,0) projectId,
        IFNULL(PR.Name,'未知项目') projectName

        FROM REGISTER_DATA_MONTH D
        LEFT JOIN PROJECT PR ON PR.ID=D.ProjectId
        LEFT JOIN PRODUCT PT ON PT.ID = PR.ProductId
        LEFT JOIN CUSTOMER C ON C.ID = PR.CustomerId
        LEFT JOIN BD B ON C.BdId = B.ID
        LEFT JOIN AGENT A ON A.ID=B.AgentId
        WHERE 1=1
        <isGreaterThan property="agentId" compareValue="0">
            AND A.ID = #agentId#
        </isGreaterThan>
        <isGreaterThan property="bdId" compareValue="0">
            AND B.ID = #bdId#
        </isGreaterThan>
        <isGreaterThan property="customerId" compareValue="0">
            AND C.ID = #customerId#
        </isGreaterThan>
        <isGreaterThan property="projectId" compareValue="0">
            AND D.projectId = #projectId#
        </isGreaterThan>
        <isGreaterThan property="productId" compareValue="0">
            AND PT.ID = #productId#
        </isGreaterThan>
        <isNotNull property="startTime">
            <isNotEmpty property="startTime">
                <isNotNull property="endTime">
                    <isNotEmpty property="endTime">
                        AND PR.CreateTime between #startTime# and #endTime#
                    </isNotEmpty>
                </isNotNull>
            </isNotEmpty>
        </isNotNull>
        GROUP BY
        D.ProjectId
        HAVING UserCount>10
        ORDER BY UserCount Desc

    </select>
    <select id="getDayInfoProjectDataVO" parameterClass="searchVO" resultClass="projectDataVO">
		SELECT 
		StatDate statDate,
		TotalUserCount totalUserCount,
		UserCount userCount,
		TotalActiveCount totalActiveCount,
		InstallCount installCount
		FROM TOTAL_DAY_DATA
		WHERE StatDate BETWEEN #startDate# and #endDate#
		GROUP BY StatDate
	</select>
</sqlMap>